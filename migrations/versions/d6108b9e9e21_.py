"""empty message

Revision ID: d6108b9e9e21
Revises: d71a04a60d55
Create Date: 2021-10-21 00:30:44.459313

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd6108b9e9e21'
down_revision = 'd71a04a60d55'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Age_range',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_age', sa.Integer(), nullable=True),
    sa.Column('to_age', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Destination',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Goal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Gray',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Method',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Method_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Obstacle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('first_name', sa.String(length=20), nullable=True),
    sa.Column('last_name', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('grade', sa.String(length=10), nullable=True),
    sa.Column('background', sa.Text(), nullable=True),
    sa.Column('profetional', sa.String(length=140), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Person_email'), 'Person', ['email'], unique=True)
    op.create_index(op.f('ix_Person_last_name'), 'Person', ['last_name'], unique=False)
    op.create_table('Profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('School',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_logo_name', sa.String(length=200), nullable=True),
    sa.Column('matya_logo_name', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Scrt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Situation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Strength',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('first_name', sa.String(length=20), nullable=True),
    sa.Column('last_name', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('grade', sa.String(length=10), nullable=True),
    sa.Column('background', sa.Text(), nullable=True),
    sa.Column('profetional', sa.String(length=140), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Student_email'), 'Student', ['email'], unique=True)
    op.create_index(op.f('ix_Student_last_name'), 'Student', ['last_name'], unique=False)
    op.create_table('Sub_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Subject',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Teacher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('first_name', sa.String(length=20), nullable=True),
    sa.Column('last_name', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('grade', sa.String(length=10), nullable=True),
    sa.Column('background', sa.Text(), nullable=True),
    sa.Column('profetional', sa.String(length=140), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Teacher_email'), 'Teacher', ['email'], unique=True)
    op.create_index(op.f('ix_Teacher_last_name'), 'Teacher', ['last_name'], unique=False)
    op.create_table('Test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Todo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Weakness',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['Student.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['Teacher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('value')
    op.drop_table('obstacle')
    op.drop_table('subject')
    op.drop_table('method_type')
    op.drop_table('school')
    op.drop_table('strength')
    op.drop_table('role')
    op.drop_table('age_range')
    op.drop_table('status')
    op.drop_table('situation')
    op.drop_index('ix_student_email', table_name='student')
    op.drop_index('ix_student_last_name', table_name='student')
    op.drop_table('student')
    op.drop_table('resource')
    op.drop_table('method')
    op.drop_table('profile')
    op.drop_index('ix_person_email', table_name='person')
    op.drop_index('ix_person_last_name', table_name='person')
    op.drop_table('person')
    op.drop_table('weakness')
    op.drop_table('document')
    op.drop_table('sub_tag')
    op.drop_table('tag')
    op.drop_table('gray')
    op.drop_index('ix_teacher_email', table_name='teacher')
    op.drop_index('ix_teacher_last_name', table_name='teacher')
    op.drop_table('teacher')
    op.drop_table('todo')
    op.drop_table('test')
    op.drop_table('scrt')
    op.drop_table('goal')
    op.drop_table('destination')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('destination',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='destination_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='destination_pkey')
    )
    op.create_table('goal',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='goal_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='goal_pkey')
    )
    op.create_table('scrt',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='scrt_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='scrt_pkey')
    )
    op.create_table('test',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='test_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='test_pkey')
    )
    op.create_table('todo',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='todo_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='todo_pkey')
    )
    op.create_table('teacher',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('birth_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('grade', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('background', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('profetional', sa.VARCHAR(length=140), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='teacher_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='teacher_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_teacher_last_name', 'teacher', ['last_name'], unique=False)
    op.create_index('ix_teacher_email', 'teacher', ['email'], unique=False)
    op.create_table('gray',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='gray_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='gray_pkey')
    )
    op.create_table('tag',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='tag_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tag_pkey')
    )
    op.create_table('sub_tag',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='sub_tag_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sub_tag_pkey')
    )
    op.create_table('document',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='document_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='document_pkey')
    )
    op.create_table('weakness',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='weakness_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='weakness_pkey')
    )
    op.create_table('person',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('person_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('birth_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('grade', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('background', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('profetional', sa.VARCHAR(length=140), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='person_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='person_pkey')
    )
    op.create_index('ix_person_last_name', 'person', ['last_name'], unique=False)
    op.create_index('ix_person_email', 'person', ['email'], unique=False)
    op.create_table('profile',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='profile_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='profile_pkey')
    )
    op.create_table('method',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='method_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='method_pkey')
    )
    op.create_table('resource',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='resource_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='resource_pkey')
    )
    op.create_table('student',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('birth_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('grade', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('background', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('profetional', sa.VARCHAR(length=140), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='student_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_student_last_name', 'student', ['last_name'], unique=False)
    op.create_index('ix_student_email', 'student', ['email'], unique=False)
    op.create_table('situation',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='situation_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='situation_pkey')
    )
    op.create_table('status',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='status_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='status_pkey')
    )
    op.create_table('age_range',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('from_age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('to_age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='age_range_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='age_range_pkey')
    )
    op.create_table('role',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='role_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], name='role_student_id_fkey'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], name='role_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='role_pkey')
    )
    op.create_table('strength',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='strength_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='strength_pkey')
    )
    op.create_table('school',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('school_logo_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('matya_logo_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='school_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='school_pkey')
    )
    op.create_table('method_type',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='method_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='method_type_pkey')
    )
    op.create_table('subject',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='subject_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subject_pkey')
    )
    op.create_table('obstacle',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='obstacle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='obstacle_pkey')
    )
    op.create_table('value',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['general_txt.id'], name='value_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='value_pkey')
    )
    op.drop_table('Role')
    op.drop_table('Weakness')
    op.drop_table('Value')
    op.drop_table('Todo')
    op.drop_table('Test')
    op.drop_index(op.f('ix_Teacher_last_name'), table_name='Teacher')
    op.drop_index(op.f('ix_Teacher_email'), table_name='Teacher')
    op.drop_table('Teacher')
    op.drop_table('Tag')
    op.drop_table('Subject')
    op.drop_table('Sub_tag')
    op.drop_index(op.f('ix_Student_last_name'), table_name='Student')
    op.drop_index(op.f('ix_Student_email'), table_name='Student')
    op.drop_table('Student')
    op.drop_table('Strength')
    op.drop_table('Status')
    op.drop_table('Situation')
    op.drop_table('Scrt')
    op.drop_table('School')
    op.drop_table('Resource')
    op.drop_table('Profile')
    op.drop_index(op.f('ix_Person_last_name'), table_name='Person')
    op.drop_index(op.f('ix_Person_email'), table_name='Person')
    op.drop_table('Person')
    op.drop_table('Obstacle')
    op.drop_table('Method_type')
    op.drop_table('Method')
    op.drop_table('Gray')
    op.drop_table('Goal')
    op.drop_table('Document')
    op.drop_table('Destination')
    op.drop_table('Age_range')
    # ### end Alembic commands ###
